from z3 import *
cyphertext = [0x74, 0x6F, 0x69, 0x35, 0x4F, 0x65, 0x6D, 0x32, 0x32, 0x79, 
  0x42, 0x32, 0x71, 0x55, 0x68, 0x31, 0x6F, 0x5F, 0xDB, 0xCE, 
  0xC9, 0xEF, 0xCE, 0xC9, 0xFE, 0x92, 0x5F, 0x10, 0x27, 0xBC, 
  0x09, 0x0E, 0x17, 0xBA, 0x4D, 0x18, 0x0F, 0xBE, 0xAB, 0x5F, 
  0x9C, 0x8E, 0xA9, 0x89, 0x98, 0x8A, 0x9D, 0x8D, 0xD7, 0xCC, 
  0xDC, 0x8A, 0xA4, 0xCE, 0xDF, 0x8F, 0x81, 0x89, 0x5F, 0x69, 
  0x37, 0x1D, 0x46, 0x46, 0x5F, 0x5E, 0x7D, 0x8A, 0xF3, 0x5F, 
  0x59, 0x01, 0x57, 0x67, 0x06, 0x41, 0x78, 0x01, 0x65, 0x2D, 
  0x7B, 0x0E, 0x57, 0x03, 0x68, 0x5D, 0x07, 0x69, 0x23, 0x55, 
  0x37, 0x60, 0x14, 0x7E, 0x1D, 0x2F, 0x62, 0x5F, 0x62, 0x5F]
flag = [BitVec('x[%d]'%i,8) for i in range(100)]
s = Solver()
index = 0
for i in range(0,17):
  flag[i] ^= 1
  index +=1
index = 18
for i in range(8):
  flag[index] ^= 0xAB
  index +=1
index = 27
for i in range(12):
  flag[index] = ((2*flag[index])|1) ^ (i + 0xCD)
  index +=1
for i in range(40,57,2):
  flag[i] ^= 0xEF
  flag[i+1] ^= 0xBE
index = 59
for i in range(5):
  flag[index] = (((flag[index] << (8 - i))|(flag[index]>>(i))))&0xFF
  index +=1
index = 65
flag[index] ^= 0x37
flag[index+1] ^= 0x13
flag[index+2] ^= 0xFE
flag[index+3] ^= 0xC0
for i in range(71,100):
  flag[i] ^= flag[i-1]
print(cyphertext[70:100])
for i in range(len(flag)):
  s.add(flag[i] == cyphertext[i])
flag = [BitVec('x[%d]'%i,8) for i in range(100)]
if(s.check() == sat):
  m = s.model()
  result = ""
  for i in range(100):
    result += chr(m[flag[i]].as_long())
  print(result)